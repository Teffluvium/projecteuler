/*
 * Problem 2 from ProjectEuler.net
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 
 *        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * Find the sum of all the even-valued terms in the sequence which do not exceed four million.
 * 
 * This algorithm uses a closed form solution for the nth term of the Fibonacci sequence.
 *
 * The correct solution is 4613732
 */
 
#include <iostream>
#include "../libsrc/projectEuler_math.h"

using namespace std;

const unsigned long NMAX = 4000000;

int main()
{
    projectEuler_math pe_math;
    unsigned long Fn  = 0;
    int           sum = 0;
    int           n   = 2;

    do
    {
        Fn = pe_math.fibonacci(n);

        if ((Fn % 2) == 0)
        {
            // Only sum even terms
            sum += Fn;
        }

        n++;
    } while ( Fn < NMAX );
    
    cout << "The sum of the even terms of the Fibonacci ";
    cout << "sequence that are less than 4 million is " << sum << endl;
    
    return 0;
}
